<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssofun.www.store.mapper.StoreSqlMapper">

	
	<!--회원가입 -->
	<insert id="insert">
		insert into tb_admin(biz_id, login_account, login_password)values(
		#{biz_id}, 
		#{login_account}, 
		#{login_password}
		)
	</insert>
	
	<!-- ID 중복확인 -->
	<select id="countByUserId" resultType="int">
		SELECT COUNT(*) FROM tb_admin WHERE login_account=#{login_accountd}
	</select>
	
	<!-- 테스트 로그인 -->
	<select id="selectByIdAndPass" resultType="com.ssofun.dto.AdminDto">
		SELECT * FROM tb_admin WHERE login_account=#{login_account} AND login_password =#{login_password} AND used_fg=1
	</select>
	
	<!-- 로그인 -->
	<select id="selectByEmailAndPassword" resultType="com.ssofun.dto.ProductUserDto">
		SELECT * FROM tb_user WHERE email=#{email} AND password =#{password} AND used_fg=1;
	</select>
	
	<!-- 상품등록 -->
	<insert id="insertByItem">
		insert into tb_product(admin_id, name, price, price_sale, contents) values(
		 #{admin_id}, 
		 #{name},
		 #{price}, 
		 #{price_sale}, 
		 #{contents}
		 )
	</insert>	
	
	<!-- 상품타입등록 -->
	<insert id="insertByCaType">
		insert into tb_product_category_type(this_parent_id, node, name)values(
		 #{this_parent_id}, 
		 #{node},
		 #{name}
		 )
	</insert>
	
	<!-- 썸네일 등록 -->
	<insert id="insertByThumbnail">
		insert into tb_product_thumbnail(product_id, name, order_list)values(
		 #{product_id}, 
		 #{name},
		 #{order_list}
		 )
	</insert>
	
	<!-- 장바구니 등록 -->
	<insert id="insertByCart">
		insert into tb_cart(user_id, product_id, count)values(
		#{user_id},
		#{product_id},
		#{count}
		)
	</insert>
	
	<!-- 배송 받는 사람 등록 -->
	<insert id="insertByRecipient">
		insert into tb_delivery_recipient(name, phone, address_post, address_default, address_detail, request_message)values(
		#{name},
		#{phone},
		#{address_post},
		#{address_default},
		#{address_detail},
		#{request_message}
		)
	</insert>
	
	<!-- 상품 주문 등록 -->
	<insert id="insertByOrder">
		insert into tb_product_order(user_id, amount)values(
		#{user_id},
		#{amount}
		)
	</insert>
	
	<!-- 주문 물품 등록 -->
	<insert id="insertByOrderItem">
	    insert into tb_product_order_item(product_order_id, product_id, product_order_status_id, delivery_recipient_id, count)
	    values(
	        (SELECT MAX(product_order_id) from tb_product_order),
	        #{product_id},
	        3,
	        (SELECT MAX(delivery_recipient_id) from tb_delivery_recipient),
	        #{count}
	    )
	</insert>
	
	<!-- 장바구니 삭제 -->
	<delete id="deleteByCart">
		DELETE FROM tb_cart WHERE user_id = #{user_id} and product_id = #{product_id}
	</delete>
	
	
	<!-- 상품목록 출력 -->
	<select id="selectProductList" resultType="com.ssofun.dto.ProductDto">
		SELECT tb_product.name AS product_name,
       	tb_product_category_type.name AS category_type_name,
       	tb_product_thumbnail.name AS thumbnail_name,
       	tb_product.price, tb_product.price_sale, tb_product.product_id
		FROM tb_product
		INNER JOIN tb_product_category
		    ON tb_product.product_id = tb_product_category.product_id
		INNER JOIN tb_product_category_type
		    ON tb_product_category.product_category_type_id = tb_product_category_type.product_category_type_id
		INNER JOIN tb_product_thumbnail
		    ON tb_product.product_id = tb_product_thumbnail.product_id
		    WHERE tb_product_thumbnail.order_list = 0
		    ORDER BY tb_product_thumbnail.product_thumbnail_id DESC
	</select>
	
	<!-- 상품상세보기 출력 -->
	<select id="selectProductListDetail" resultType="com.ssofun.dto.ProductDto">
		SELECT tb_product.name AS product_name,
	    tb_product_thumbnail.name AS thumbnail_name,
	    price, price_sale, biz_name
		FROM tb_product
		INNER JOIN tb_product_thumbnail ON tb_product.product_id = tb_product_thumbnail.product_id
		INNER JOIN tb_admin  ON tb_product.admin_id = tb_admin.admin_id
		INNER JOIN tb_biz  ON  tb_admin.biz_id = tb_biz.biz_id
		WHERE tb_product_thumbnail.product_id = #{product_id}
	</select>
	
	<!-- 장바구니 목록 출력 -->
	<select id="selectCartList" resultType="com.ssofun.dto.ProductUserDto">
		SELECT tb_user.user_id, tb_cart.product_id, MIN(tb_product_thumbnail.name) AS thumbnail_name,tb_product.name AS product_name, tb_product.price_sale AS price,
       (SELECT SUM(count) FROM tb_cart AS c WHERE c.user_id = tb_user.user_id AND c.product_id = tb_cart.product_id) AS total_count
		FROM tb_user
		INNER JOIN tb_cart ON tb_user.user_id = tb_cart.user_id
		INNER JOIN tb_product ON tb_cart.product_id = tb_product.product_id
		INNER JOIN tb_product_thumbnail ON tb_product.product_id = tb_product_thumbnail.product_id
		WHERE tb_user.user_id = #{user_id} AND tb_user.used_fg=1
		GROUP BY tb_user.user_id, tb_cart.product_id
	</select>
	
	
	
		
	
	<!-- 아래는 테스트 코드 -->
	
	<!-- <insert id="insert">
		insert into tb_user_test(id,pass,nickname,created_at) values(
		 #{id}, 
		 #{pass},
		 #{nickname}, 
		 CURRENT_TIMESTAMP()
		 )
	</insert>-->
	
	<!-- ID 중복확인 -->
	<!--<select id="countByUserId" resultType="int">
		SELECT COUNT(*) FROM tb_user_test WHERE id=#{id}
	</select> -->
	
	<!-- 상품입력 -->
	<!-- <insert id="insertByItem">
		insert into tb_item(category_id, item_name, item_explain, item_price, image_link,created_at) values(
		 #{category_id}, 
		 #{item_name},
		 #{item_explain}, 
		 #{item_price}, 
		 #{image_link}, 
		 CURRENT_TIMESTAMP()
		 )
	</insert> -->
	
</mapper>
